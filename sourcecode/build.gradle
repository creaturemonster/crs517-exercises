/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

apply from: 'dependencies.gradle'

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'java'

	configurations {
		runtime.exclude group: 'javax.servlet', module: 'servlet-api'
		runtime.exclude group: 'javax.servlet.jsp', module: 'jsp-api'
		//runtime.exclude group: 'javax.annotation', module: 'javax.annotation-api'
	}
	
	eclipse {
		classpath {
			downloadJavadoc = true
			downloadSources = true
		}
	}

	repositories {
		jcenter()
	}

	compileJava.onlyIf{ project.name.endsWith('Solution') || (project.name == 'rainforest') }
	javadoc.onlyIf{ project.name.endsWith('Solution') || (project.name == 'rainforest') }

	javadoc {
	    options {
	        failOnError = false
	        encoding "UTF-8"
	        docEncoding "UTF-8"
	        charSet "UTF-8"
	        linkSource true
	        links("http://docs.oracle.com/javase/9/docs/api/");
	    }
	}
}

subprojects {
	sourceCompatibility = JavaVersion.VERSION_1_9
	//targetCompatibility = JavaVersion.VERSION_1_9

	dependencies {
		compile libraries.logging
		
		if (file('website').exists()) {
			compileOnly libraries.servlet, libraries.jstl
		}
	}

	// modify Eclipse classpath for web exercises
	eclipse {
		classpath {
			if (file('website').exists()) {
				defaultOutputDir = file('website/WEB-INF/classes')
		
				file {
					whenMerged { cp ->
						cp.entries.each {
							if (it instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder) {
								it.output = 'website/WEB-INF/classes'
							}
						}
					}
				}
			}
		}
	
		project {
		  	natures 'org.springframework.ide.eclipse.core.springnature'
		}
	}
}

/*
apply plugin: 'war'
webAppDirName = 'website'

apply plugin: 'eclipse-wtp'
eclipse.wtp.facet {
	file {
		whenMerged {
			facets.each { f ->
				if (f.name == 'jst.java') {
					f.version = '9'
				}
				else if (f.name == 'jst.web') {
					f.version = '4.0'
				}
			}
		}
	}
	//facet name: 'jst.java', version: '9'
	//facet name: 'jst.web', version: '4.0'
	//facet name: 'wst.jsdt.web', version: '1.0'
}
*/

// add all the dependencies defined in dependencies.gradle
// used to export all the runtime dependencies
dependencies {
    for (pair in appDependencies) {
    	//println("pair: " + pair)
    	//println("pair.dependency class: " + pair.dependency.getClass())
    	
    	if (pair.dependency instanceof java.util.Collection) {
    		for (dep in pair.dependency) {
    			//println("dep: " + dep)
        		add(pair.configuration, dep)
        	}
    	}
    	else {
			//println("String dep: " + pair.dependency)
    		add(pair.configuration, pair.dependency)
        }
    }
}

task cleanRtLibs(type: Delete) {
    delete fileTree('libs/runtime')
}

task exportRtLibs(type: Copy) {
    into 'libs/runtime'
    from configurations.runtime
}
build.dependsOn cleanRtLibs, exportRtLibs
